name: RDP

on: [workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Download and Extract ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath ngrok
          $env:Path += ";$PWD\ngrok"
          .\ngrok\ngrok.exe authtoken $env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable RDP and Start ngrok
        run: |
          net user kamel123 MyStrong123 /add
          net localgroup administrators kamel123 /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Start-Process -NoNewWindow -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389"

      - name: Wait for tunnel and display RDP address
        run: |
          Start-Sleep -Seconds 10
          $url = Invoke-RestMethod http://127.0.0.1:4040/api/tunnels | Select-Object -ExpandProperty tunnels | Where-Object {$_.proto -eq "tcp"} | Select-Object -ExpandProperty public_url
          Write-Output "ðŸ”— RDP Address: $url"
