name: RDP

on: [workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Download and Extract ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath ngrok
          $env:Path += ";$PWD\ngrok"
          .\ngrok\ngrok.exe authtoken $env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable RDP and Start ngrok tunnel in background
        run: |
          net user kamel123 MyStrong123 /add
          net localgroup administrators kamel123 /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Start-Job -ScriptBlock { & "$PWD\ngrok\ngrok.exe" tcp 3389 }
          Start-Sleep -Seconds 15

      - name: Get ngrok tunnel info
        run: |
          $retries = 5
          $url = ""
          for ($i = 0; $i -lt $retries; $i++) {
            try {
              $tunnels = Invoke-RestMethod http://127.0.0.1:4040/api/tunnels
              $url = $tunnels.tunnels | Where-Object {$_.proto -eq "tcp"} | Select-Object -ExpandProperty public_url
              if ($url) { break }
            } catch {
              Start-Sleep -Seconds 5
            }
          }

          if (-not $url) {
            Write-Error "‚ùå ngrok tunnel not found. Exiting."
            exit 1
          }

          Write-Output "‚úÖ Your RDP tunnel is ready:"
          Write-Output "üîó RDP Address: $url"
